<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-18T17:35:51 SAMT" name="Surefire suite" finished-at="2022-05-18T17:37:11 SAMT" duration-ms="80628">
    <groups>
    </groups>
    <test started-at="2022-05-18T17:35:51 SAMT" name="Surefire test" finished-at="2022-05-18T17:37:11 SAMT" duration-ms="80628">
      <class name="Tests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:35:51 SAMT" name="setUp" finished-at="2022-05-18T17:36:10 SAMT" duration-ms="19512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkAutorization()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:10 SAMT" name="checkAutorization" finished-at="2022-05-18T17:36:15 SAMT" duration-ms="4793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAutorization -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:15 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:36:16 SAMT" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAutorization status=SUCCESS method=Tests.checkAutorization()[pri:0, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:16 SAMT" name="setUp" finished-at="2022-05-18T17:36:19 SAMT" duration-ms="3433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="transactionRecovery()[pri:1, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:19 SAMT" name="transactionRecovery" finished-at="2022-05-18T17:36:25 SAMT" duration-ms="5539" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="sc-pVTFL bxJNrM addButton rectButton  " type="button">...</button> is not clickable at point (410, 118). Other element would receive the click: <div class="sc-bdvvtL kIEjym blockLoader">...</div>
  (Session info: chrome=99.0.4844.51)
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'evgeniy-Lenovo-ideapad-330-15IKB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-40-generic', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ea80b03c6d24b54a533812c17990deeb, clickElement {id=9d9de15b-d960-421e-a40e-3cc437096ea4}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.51, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: /tmp/.com.google.Chrome.7ZClVn}, goog:chromeOptions: {debuggerAddress: localhost:42293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:42293/devtoo..., se:cdpVersion: 99.0.4844.51, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on LINUX (ea80b03c6d24b54a533812c17990deeb)] -> xpath: //button[text()="Добавить"]]
Session ID: ea80b03c6d24b54a533812c17990deeb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="sc-pVTFL bxJNrM addButton rectButton  " type="button">...</button> is not clickable at point (410, 118). Other element would receive the click: <div class="sc-bdvvtL kIEjym blockLoader">...</div>
  (Session info: chrome=99.0.4844.51)
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'evgeniy-Lenovo-ideapad-330-15IKB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-40-generic', java.version: '11.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ea80b03c6d24b54a533812c17990deeb, clickElement {id=9d9de15b-d960-421e-a40e-3cc437096ea4}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.51, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: /tmp/.com.google.Chrome.7ZClVn}, goog:chromeOptions: {debuggerAddress: localhost:42293}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:42293/devtoo..., se:cdpVersion: 99.0.4844.51, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on LINUX (ea80b03c6d24b54a533812c17990deeb)] -> xpath: //button[text()="Добавить"]]
Session ID: ea80b03c6d24b54a533812c17990deeb
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at MainPage.clickAddButton(MainPage.java:30)
at Tests.transactionRecovery(Tests.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionRecovery -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:25 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:36:25 SAMT" duration-ms="532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionRecovery status=FAILURE method=Tests.transactionRecovery()[pri:1, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:25 SAMT" name="setUp" finished-at="2022-05-18T17:36:34 SAMT" duration-ms="8444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="importFile()[pri:2, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:34 SAMT" name="importFile" finished-at="2022-05-18T17:36:40 SAMT" duration-ms="6705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- importFile -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:40 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:36:41 SAMT" duration-ms="554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=importFile status=SUCCESS method=Tests.importFile()[pri:2, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:41 SAMT" name="setUp" finished-at="2022-05-18T17:36:46 SAMT" duration-ms="4764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createCheck()[pri:3, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:46 SAMT" name="createCheck" finished-at="2022-05-18T17:36:51 SAMT" duration-ms="5306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCheck -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:51 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:36:51 SAMT" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createCheck status=SUCCESS method=Tests.createCheck()[pri:3, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:51 SAMT" name="setUp" finished-at="2022-05-18T17:36:54 SAMT" duration-ms="2877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkValidationCheckField()[pri:4, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:36:54 SAMT" name="checkValidationCheckField" finished-at="2022-05-18T17:37:01 SAMT" duration-ms="6791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidationCheckField -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:37:01 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:37:01 SAMT" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkValidationCheckField status=SUCCESS method=Tests.checkValidationCheckField()[pri:4, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:37:01 SAMT" name="setUp" finished-at="2022-05-18T17:37:04 SAMT" duration-ms="2993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkValidationBikBankField()[pri:5, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:37:04 SAMT" name="checkValidationBikBankField" finished-at="2022-05-18T17:37:11 SAMT" duration-ms="6827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidationBikBankField -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:Tests@2f19f2aa]" started-at="2022-05-18T17:37:11 SAMT" name="takeScreenshot" finished-at="2022-05-18T17:37:11 SAMT" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkValidationBikBankField status=SUCCESS method=Tests.checkValidationBikBankField()[pri:5, instance:Tests@2f19f2aa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- Tests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
